<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- 缓存管理器 使用Ehcache实现 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml" />
	</bean>

	<!-- 凭证匹配器 -->
	<!-- <bean id="credentialsMatcher" class="org.quinn.accounts.shiro.credentials.RetryLimitHashedCredentialsMatcher"> 
		<constructor-arg ref="cacheManager" /> <property name="hashAlgorithmName" 
		value="md5" /> <property name="hashIterations" value="2" /> <property name="storedCredentialsHexEncoded" 
		value="true" /> </bean> -->

	<bean id="roleService" class="org.quinn.accounts.service.base.impl.RoleServiceImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="permissionService"
		class="org.quinn.accounts.service.base.impl.PermissionServiceImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<bean id="userService" class="org.quinn.accounts.service.base.impl.UserServiceImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>

	<!-- Realm实现 -->
	<bean id="userRealm" class="org.quinn.accounts.shiro.realm.AuthRealm">
		<property name="cachingEnabled" value="true" />
		<property name="authenticationCachingEnabled" value="true" />
		<property name="authenticationCacheName" value="authenticationCache" />
		<property name="authorizationCachingEnabled" value="true" />
		<property name="authorizationCacheName" value="authorizationCache" />
		<property name="roleService" ref="roleService" />
		<property name="permissionService" ref="permissionService" />
		<property name="userService" ref="userService" />
	</bean>

	<bean id="permissionResolver"
		class="org.apache.shiro.authz.permission.WildcardPermissionResolver" />

	<!-- <bean id="authorizer" class="org.apache.shiro.authz.ModularRealmAuthorizer"> 
		<property name="permissionResolver" ref="permissionResolver"></property> 
		</bean> -->


	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator"
		class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />

	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="sid" />
		<property name="httpOnly" value="true" />
		<property name="maxAge" value="180000" />
	</bean>

	<!-- 会话DAO -->
	<bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>

	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler"
		class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="1800000" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<bean id="sessionListener" class="org.quinn.accounts.shiro.ShiroSessionListener" />

	<!-- 会话管理器 sessionManager，ServletContainerSessionManager直接使用Servlet session -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="globalSessionTimeout" value="1800000" />
		<property name="deleteInvalidSessions" value="true" />
		<property name="sessionValidationSchedulerEnabled" value="true" />
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler" />
		<property name="sessionDAO" ref="sessionDAO" />
		<property name="sessionIdCookieEnabled" value="true" />
		<property name="sessionIdCookie" ref="sessionIdCookie" />
		<property name="sessionListeners" ref="sessionListener"></property>
	</bean>


	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
		<property name="sessionManager" ref="sessionManager" />
		<property name="cacheManager" ref="cacheManager" />
		<!-- <property name="authorizer" ref="authorizer" /> -->
		<property name="sessionMode" value="native" />
	</bean>

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter"
		class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
	</bean>

	<bean class="org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter"
		id="basicHttpAuthenticationFilter">
		<property name="applicationName" value="please login!"></property>
	</bean>
	<!--<property name="usernameParam" value="username" /> <property name="passwordParam" 
		value="password" /> <property name="loginUrl" value="/login.jsp" /> </bean> -->

	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="unauthorizedUrl" value="/unauthorized.jsp" />
		<property name="filters">
			<util:map>
				<!-- 这个过滤器会自动跳转到登录页面 -->
				<entry key="authc" value-ref="formAuthenticationFilter" />

				<!-- 这个过滤器会弹出登录框然后跳转到要去的页面 -->
				<entry key="authcBasic" value-ref="basicHttpAuthenticationFilter"></entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/index.jsp = anon
				/login.jsp=anon
				/usr/noAuthorize.shtml = anon
				/usr/login.shtml =anon
				/logout = logout
				/*/**=authcBasic
			</value>
		</property>
	</bean>

	<!-- Shiro生命周期处理器  authcBasic-->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

</beans>